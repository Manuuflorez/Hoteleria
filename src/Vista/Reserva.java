
package Vista;

import Data.ReservaData;
import Modelo.*;
import java.awt.event.WindowEvent;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;

public class Reserva extends javax.swing.JFrame {
    
    private Modelo.Reserva reserva;
    private Habitacion habitacion;
    private Usuario usuario;

    public Reserva(Habitacion habitaciones, Usuario usuario) {
        initComponents();
        this.habitacion = habitaciones;
        this.usuario = usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fecha_inicio = new com.toedter.calendar.JDateChooser();
        fecha_fin = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ReservaFinal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Selecciona la fecha de inicio:");

        jLabel2.setText("Selecciona la fecha de finalizacion:");

        ReservaFinal.setText("Hacer Reserva");
        ReservaFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservaFinalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(fecha_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(fecha_fin, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(ReservaFinal)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(fecha_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ReservaFinal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private double calcularTotal(){
        Date fechaInicio = fecha_inicio.getDate();
        Date fechaFin = fecha_fin.getDate();
        int diffDays = (int)(fechaFin.getTime() - fechaInicio.getTime())/ (1000 * 60 * 60 * 24) ;
        int tempDays =0;
        double total = 0;
        Calendar c = Calendar.getInstance();
        c.setTime(fechaInicio);
        while(tempDays != diffDays){
            int dia =  c.get(Calendar.DAY_OF_WEEK);
            if(dia == Calendar.FRIDAY ||dia == Calendar.SATURDAY || dia == Calendar.SUNDAY){
                total = total + habitacion.getPrecio_temAlta();
            }else{
                total = total + habitacion.getPrecio_temBaja();
            }
            tempDays ++;
            c.add(Calendar.DATE, tempDays);
        }
        return total;
    }
    private void ReservaFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservaFinalActionPerformed
        try{
            if(fecha_inicio.getCalendar().getTime().getTime() < fecha_fin.getCalendar().getTime().getTime()){
                this.reserva = new Modelo.Reserva();
                this.reserva.setFechaInicio(fecha_inicio.getCalendar().getTime());
                this.reserva.setFechaFin(fecha_fin.getCalendar().getTime());
                this.reserva.setId_usuario(usuario.getId_usuario());
                this.reserva.setId_habitacion(habitacion.getId_habitacion());
                double total = calcularTotal();
                int confirmado = JOptionPane.showConfirmDialog(
                    this,
                    "El valor total de la reserva sera "+total+" esta deacuerdo?");

                 if (JOptionPane.OK_OPTION == confirmado){
                     
                    this.reserva.setTotal(total);
                    try{
                        ReservaData reservaDatabase = new ReservaData();
                        boolean realizoReserva =reservaDatabase.createReserva(reserva);
                        if(realizoReserva){
                            JOptionPane.showMessageDialog(this, "se realizo la reserva con exito",
                                "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                            this.setVisible(false);

                        }else{
                            JOptionPane.showMessageDialog(this, "Por favor vuelva a intentar reservar",
                                "ERROR", JOptionPane.ERROR_MESSAGE);
                        }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(this, "No se pudo conectar con la base de datos intenta de nuevo",
                                "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }catch(Exception e){
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, "Debe seleccionar fechas validas",
                            "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ReservaFinalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReservaFinal;
    private com.toedter.calendar.JDateChooser fecha_fin;
    private com.toedter.calendar.JDateChooser fecha_inicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
